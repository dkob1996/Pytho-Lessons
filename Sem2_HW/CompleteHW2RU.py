'''
Объедененная версия домашнего задания для 2 семинара
'''
'''
Задача 10:
На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. 
Выведите минимальное количество монет, которые нужно перевернуть
'''
from random import randint
n = int(input("Введите количество монет: "))

# 0 - Орел /heads ; 1 - Решка / tails

count_of_heads = 0
count_of_tails = 0

for i in range(n):
    side_of_the_coin = randint(0, 1)
    # print(side_of_the_coin, end=' ')                             # проверка отображения всех монет
    if side_of_the_coin == 0:
        count_of_heads +=1
    else:
        count_of_tails +=1
print()
if count_of_heads>count_of_tails:
    print('Нам нужно перевернуть решки, их количество: ', count_of_tails)
elif count_of_heads<count_of_tails:
    print('Нам нужно перевернуть орлы, их количество: ', count_of_heads)
elif count_of_heads==count_of_tails:
    print('Не важно кого конкретно переворачивать, ведь кол-во орлов и решек одинаково: ', count_of_tails)

'''
Задача 12:
Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. 
Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. 
Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
'''

# Математическое решение
'''
s - сумма двух чисел
p - перемножение двух чисел


s = x + y
p = x * y
x = p/y
y=s-x -> p= x * y
p = x*(s-x)
p = sx - x*x
x*x + (-sx) +p = 0

D = s*s - 4*1*p
1. D>0    x1=(s+sqrt(D))/2   x2 = (s-sqrt(D))/2   count =2
2. D = 0  x = s/2   count = 1
3. D<0    сообщение - некорректные s и p

if count = 2
y1 = p/x1  y2 = p/x2

if count = 1
y = p/x


'''
# Дополнение:
# У нас есть несколько условий для искомых чисел:
# Натуральные - >0, целые, !=0 - исходя из этого куча проверок

from math import sqrt
s = int(input("Введите сумму двух чисел: "))
p = int(input("Введите произведение двух чисел: "))

D = s*s - 4*p                                                                     # Поиск дискременанта - см. математическое решение

if D > 0:                                                                          
    x1 = (s+sqrt(D))/2
    x2 = (s-sqrt(D))/2
    y1 = p/x1
    y2 = p/x2
    if (s+sqrt(D)) % 2 > 0 or (s-sqrt(D)) % 2 > 0 or p % x1 > 0 or p % x2 > 0:    # Т.к. в условии сказано что искомые числа натуральные, значит они не могут быть дробными
        print('Все искомые числа должны быть целыми')
    if x1 < 0 or y1 < 0:                                                          # Проверка первой пары корней на отрицательность
        if x2 < 0 or y2 < 0:                                                      # Проверка второй пары корней на отрицательность
            print('Искомые числа должны быть >0')
        else:
            print('У нас есть одна пара чисел: ')
            print('{0} - первое число, {1} - второе число'.format(x2, y2))
    elif x2 < 0 or y2 < 0:                                                        # Проверка второй пары корней на отрицательность ->
        print('У нас есть одна пара чисел: ')                                     # (т.к. если до этой проверки дошло, значит первая пара положительна)
        print('{0} - первое число, {1} - второе число'.format(x1, y1))
    else:
        print('У нас есть две пары чисел: ')
        print('первая пара: {0} - первое число, {1} - второе число'.format(x1, y1))
        print('вторая пара: {0} - первое число, {1} - второе число'.format(x2, y2))
elif D == 0:
    x = s/2
    y = p/x
    if s % 2 > 0 or p % x > 0:                                                    # Свое условие на проверку целых искомых чисел для одной пары
        print('Все искомые числа должны быть целыми')
    if x < 0 or y < 0:                                                            # Не могут быть отрицательными т.к. натуральные
        print('Искомые числа должны быть >0')
    else:
        print('У нас есть одна пара чисел: ')
        print('{0} - первое число, {1} - второе число'.format(x, y))
elif D < 0:
    print('Некорректные сумма и произведение чисел для их поиска (Дискременант < 0)')    # В случае если нет искомых чисел

'''
Задание 14:
Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
'''

n = int(input("Введите N: "))

from math import log
if n <= 0:
    print('Введите, пожалуйста, N > 0')
else:
    grade_of_n = log(n,2)                                # поиск степени в которую надо возвести 2, чтобы получить N
    count = -1
    print()
    print('Все степени 2, которые >=0 и < log(n,2): ')    # См. сноску (*) ниже
    while count<int(grade_of_n):
        count +=1
        print(count)

#  * Задача сформулированна немного некорректно, т.к. 
# бесконечное множество отрацительных степеней 2 будет < N
# поэтому у нас только один выход - сделать решение для степеней от 0 и выше, и указать изъян в print